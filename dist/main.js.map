{"version":3,"file":"main.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;ACAqD;AACrD;AAC+C;AAC/C;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB,QAAQ,yEAAO,GAAU,EAAE,OAAO,WAAW,CAAC;AACpF,gBAAgB,6EAA4B;AAC5C;AACA;AACA,yCAAyC,aAAa,kBAAkB,oEAAmB,EAAE;AAC7F;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA,+FAA+F,EAAE;AACjG;AACA;AACA,oCAAoC,YAAY,SAAS,WAAW;AACpE;AACA,yDAAyD,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2BAA2B;AACtE;AACA;AACA;AACA;AACA;AACA,QAAQ,+EAA8B,CAAC,0EAA4B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gDAAgD;AACxE,YAAY,+EAA8B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gDAAgD;AACxE,oBAAoB,cAAc;AAClyBAAyB,+BAA+B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA,2BAA2B,qCAAqC;AAChkBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1gB8C;AACI;AAClyEAA2B;AACvC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,YAAY,uEAA8B;AAC1C;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sEAAwB;AACvE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iFAAmC;AAClE;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,YAAY,yEAA2B;AACvC,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8EAA8E,kBAAkB;AAChG,gFAAgF,iBAAiB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yEAA2B;AACvC,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uEAA8B;AAC9C,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qEAA4B;AAC5C,aAAa;AACb;AACA;AACA;AACA;AACA,YAAY,qEAA4B;AACxC,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,0EAAiC;AACjD,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,SAAS;AACpF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,SAAS;AAChG;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uEAA8B;AAC1C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oEAA2B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sEAA6B;AACzC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,YAAY,mEAA0B;AACtC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,YAAY;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvnB6B;AACN;AACD;AAC4B;AAClD;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA,6EAAoC;;;;;;;;;;;;;;;;;ACTJ;AACM;AACtC;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wEAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mDAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChGwD;AACxD;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mDAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,UAAU,IAAI,qDAAqD,GAAG,UAAU;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AChEkC;AACA;AAClC;AACkD;AAC1B;AACxB;AACe;AACf;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iDAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAkC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,+BAA+B;AACpG,wCAAwC,+BAA+B,SAAS,gCAAgC;AAChH;AACA,uDAAuD,KAAK;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,SAAS;AACnC,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,kCAAkC,uCAAuC,IAAI,IAAI;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,eAAe,gBAAgB,eAAe;AAC/F;AACA,QAAQ,4CAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uEAA8B;AAClD;AACA;AACA,qBAAqB;AACrB;AACA;AACA,oBAAoB,2EAAkC;AACtD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4CAAG;AAC5C;AACA;AACA,8BAA8B,oDAAW;AACzC;AACA;AACA;AACA,8BAA8B,mDAAU;AACxC;AACA;AACA;AACA,8BAA8B,oDAAW;AACzC;AACA,0BAA0B,sDAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC/QqD;AACI;AACN;AACJ;AAC/C;AACA;AACe;AACf;AACA;AACA;AACA,aAAa,uDAAS;AACtB;AACA;AACA;AACA;AACA,aAAa,wDAAU;AACvB;AACA;AACA;AACA;AACA,aAAa,0DAAY;AACzB;AACA;AACA;AACA;AACA,aAAa,qDAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+BAA+B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA,yDAAyD,eAAe;AACxE;AACA,wBAAwB,0BAA0B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,QAAQ;AACzE;AACA,gCAAgC,MAAM;AACtC;AACA,0FAA0F,QAAQ;AAClG,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvNe;AACflE,+DAA+D,MAAM,WAAW,MAAM,IAAI,QAAQ;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC7HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCrKA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA;WACA,uBAAuB,4BAA4B;WACnD;WACA;WACA;WACA,iBAAiB,oBAAoB;WACrC;WACA,sCAAsC,YAAY;WAClD;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mEAAmE,iCAAiC;WACpG;WACA;WACA;WACA;;;;;WCxCA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCfA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,iCAAiC;;WAEjC;WACA;WACA;WACA,KAAK;WACL,eAAe;WACf;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UErFA;UACA;UACA;UACA;UACA","sources":["webpack:///./styles/styles.scss?b865","webpack:///./ModuleIntegrator.js","webpack:///./UIControls.js","webpack:///./app.js","webpack:///./data/DataControls.js","webpack:///./data/Settings.js","webpack:///./data/Sheet.js","webpack:///./data/Var.js","webpack:///./modules/AbstractModule.js","webpack:///./modules/ lazy ^\\.\\/.*\\/Module\\.js$ namespace object","webpack:///./utils/utils.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/chunk loaded","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/ensure chunk","webpack:///webpack/runtime/get javascript chunk filename","webpack:///webpack/runtime/get mini-css chunk filename","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/load script","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import AbstractModule from '@modules/AbstractModule';\r\n// import UIControls from './UIControls';\r\nimport DataControls from './data/DataControls';\r\n\r\nexport default class ModuleIntegrator {\r\n    static MODULE_FOLDERS = ['paired-sample-test', 'independent-sample-test', 'correlation-test'];\r\n    static modules = [];\r\n    static timerId;\r\n    static hypotheses = [];\r\n    static globalSettings = {\r\n        form: document.querySelector('#module-option-form_glob'),\r\n        name: undefined,\r\n        FWER: undefined,\r\n        mainHypId: undefined,\r\n        power: undefined,\r\n        hypCounter: 0,\r\n        unhiddenCounter: 0,\r\n        preciseSampleSize: undefined,\r\n        sampleSize: undefined,\r\n        update: null,\r\n\r\n        getAlpha(asString = true) {\r\n            if (this.unhiddenCounter) {\r\n                if (asString) {\r\n                    return Math.roundGOST(this.FWER / this.unhiddenCounter);\r\n                }\r\n                else {\r\n                    return this.FWER / this.unhiddenCounter;\r\n                }\r\n            }\r\n            else {\r\n                return '-';\r\n            }\r\n        },\r\n        getMainHypName() {\r\n            const main = ModuleIntegrator.hypotheses[this.mainHypId];\r\n            return main && main.hyp ? main.hyp.getName() : '-';\r\n        },\r\n        createNewHypOption(id, name) {\r\n            const newOption = document.createElement('option');\r\n            newOption.setAttribute('value', id);\r\n            newOption.classList.add('main-hypothesis__option_' + id);\r\n            newOption.textContent = name;\r\n            UIControls.mainHypSelect.appendChild(newOption);\r\n        },\r\n        updateHypOption(id, name) {\r\n            const newOption = UIControls.mainHypSelect.querySelector('.main-hypothesis__option_' + id);\r\n            if (newOption)\r\n                newOption.textContent = name;\r\n        },\r\n        deleteHypOption(id) {\r\n            const optionToDelete = UIControls.mainHypSelect.querySelector('.main-hypothesis__option_' + id);\r\n            if (optionToDelete)\r\n                UIControls.mainHypSelect.removeChild(optionToDelete);\r\n            for (let i = id + 1; i < this.hypCounter; i++) {\r\n                const el = UIControls.mainHypSelect.querySelector('.main-hypothesis__option_' + i);\r\n                if (el) {\r\n                    el.setAttribute('value', i - 1);\r\n                    el.classList.replace('main-hypothesis__option_' + i, 'main-hypothesis__option_' + (i - 1));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    static async createModuleButtons() {\r\n\r\n        const modules = ModuleIntegrator.modules;\r\n        for (const folder of ModuleIntegrator.MODULE_FOLDERS) {\r\n            const { default: Module } = await import(`@modules/${folder}/Module.js`);\r\n            if (AbstractModule.isPrototypeOf(Module))\r\n                modules.push(Module);\r\n            else\r\n                throw new Error(`Class ${Module.name} doesn't extends ${AbstractModule.name} class`);\r\n        }\r\n\r\n        const moduleListElement = UIControls.moduleListElement;\r\n\r\n        for (let i = 0; i < modules.length; i++) {\r\n            modules[i].setModuleTypeId(i);\r\n            const moduleName = modules[i].getName();\r\n            const moduleImage = modules[i].getImage();\r\n            moduleListElement.innerHTML += `\r\n            <li title=\"Добавить новую гипотезу\" class=\"modules__item button\" data-module-id='${i}'>\r\n                <div class=\"modules__item-content\">\r\n                    <div class=\"modules__icon\">\r\n                        <img src=\"${moduleImage}\" alt=\"${moduleName}\">\r\n                    </div>\r\n                    <span class=\"modules__description\">${moduleName}</span>\r\n                </div>\r\n            </li>`;\r\n        }\r\n\r\n        UIControls.addModuleBtnsListeners();\r\n        UIControls.addModuleFormListeners(UIControls.parametersGlobItem, null, true);\r\n        ModuleIntegrator.setSettings('glob', UIControls.parametersGlobItem.querySelector('form'));\r\n    }\r\n\r\n    //add new hypothesis by type id and if needed to make clone with reference Hyp\r\n    static addHypothesis(hypTypeId, refHyp = null) {\r\n        const globalSettings = ModuleIntegrator.globalSettings;\r\n        const newHyp = new ModuleIntegrator.modules[hypTypeId](globalSettings.hypCounter, refHyp);\r\n        ModuleIntegrator.hypotheses.push({ hyp: newHyp, update: null });\r\n        if (!refHyp) {\r\n            newHyp.createHTML();\r\n        }\r\n        const newEl = newHyp.getElement();\r\n        globalSettings.createNewHypOption(globalSettings.hypCounter, newHyp.getName());\r\n        AbstractModule.addSheetOptions(DataControls.getListOfSheets(), newHyp.getSheetSelects());\r\n        ModuleIntegrator.refreshVarsOfHyp(globalSettings.hypCounter)\r\n        UIControls.addModuleFormListeners(newEl, newHyp.addListeners.bind(newHyp, newEl));\r\n\r\n        if (globalSettings.unhiddenCounter === 0) {\r\n            globalSettings.mainHypId = globalSettings.hypCounter;\r\n            UIControls.mainHypSelect.lastElementChild.selected = true;\r\n        }\r\n        globalSettings.hypCounter++;\r\n        globalSettings.unhiddenCounter++;\r\n\r\n        ModuleIntegrator.setSettings('glob');\r\n    }\r\n\r\n    //add options to sheet select of all hypotheses with sheet obj and bool (should all hyp refresh vars?) \r\n    static optionListAdd(newSheet, optionsEmpty = false) {\r\n        for (let i = 0; i < ModuleIntegrator.globalSettings.hypCounter; i++) {\r\n            AbstractModule.addSheetOptions([newSheet], ModuleIntegrator.hypotheses[i].hyp.getSheetSelects());\r\n            if (optionsEmpty) {\r\n                ModuleIntegrator.refreshVarsOfHyp(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    static refreshVarsOfHyp(hypID, el = null) {\r\n        let formElements;\r\n        if (el) {\r\n            formElements = [el];\r\n        }\r\n        else {\r\n            formElements = ModuleIntegrator.hypotheses[hypID].hyp.getFormSheets();\r\n        }\r\n        formElements.forEach(element => {\r\n            const curSheetId = Number(new FormData(element).get('sheet-select'));\r\n            ModuleIntegrator.hypotheses[hypID].hyp.displayVarsOfSheet(curSheetId, element.dataset.type);\r\n        })\r\n    }\r\n\r\n    static updateVarsOfSheet(sheetId, clearSelected) {\r\n        ModuleIntegrator.hypotheses.forEach(el => {\r\n            if (clearSelected) {\r\n                el.hyp.clearSelectedVars();\r\n            }\r\n            else {\r\n                el.hyp.updateSelectedVarsVisual(sheetId);\r\n            }\r\n\r\n            const formElements = el.hyp.getFormSheets();\r\n\r\n            formElements.forEach((element) => {\r\n                const curSheetId = Number(new FormData(element).get('sheet-select'));\r\n                if (curSheetId === sheetId)\r\n                    el.hyp.displayVarsOfSheet(curSheetId, element.dataset.type);\r\n            });\r\n        });\r\n\r\n        this.setSettings('glob');\r\n    }\r\n\r\n    static setSettings(id) {\r\n\r\n        UIControls.resultsLoadingShow();\r\n        if (id === 'glob') {\r\n            ModuleIntegrator.globalSettings.update = true;\r\n        }\r\n        else {\r\n            ModuleIntegrator.hypotheses[id].update = true;\r\n        }\r\n\r\n        function delayed() {\r\n            ModuleIntegrator.applySettings();\r\n            UIControls.resultsLoadingHide();\r\n            ModuleIntegrator.timerId = 0;\r\n        }\r\n\r\n        if (ModuleIntegrator.timerId) {\r\n            clearTimeout(ModuleIntegrator.timerId);\r\n        }\r\n\r\n        ModuleIntegrator.timerId = setTimeout(delayed, 1000);\r\n    }\r\n\r\n    static applySettings() {\r\n        const hypotheses = ModuleIntegrator.hypotheses;\r\n        const globalSettings = ModuleIntegrator.globalSettings;\r\n        let updateAllResults = false;\r\n        let mainHyp = hypotheses[globalSettings.mainHypId];\r\n\r\n        if (globalSettings.update) {\r\n            ModuleIntegrator.setGlobalSettings();\r\n            if (globalSettings.unhiddenCounter) {\r\n                ModuleIntegrator.setMainSettings();\r\n            }\r\n            else {\r\n                globalSettings.sampleSize = '-';\r\n            }\r\n            mainHyp = hypotheses[globalSettings.mainHypId];\r\n            globalSettings.update = false;\r\n            updateAllResults = true;\r\n        }\r\n        else if (mainHyp?.update) {\r\n            ModuleIntegrator.setMainSettings();\r\n            updateAllResults = true;\r\n        }\r\n\r\n        if (updateAllResults) {\r\n            ModuleIntegrator.updateResultsGlob();\r\n            mainHyp?.hyp.updateResultsHtml(true);\r\n        }\r\n\r\n        const alpha = globalSettings.getAlpha(false);\r\n        for (let i = 0; i < ModuleIntegrator.globalSettings.hypCounter; i++) {\r\n            const { hyp, update } = hypotheses[i];\r\n\r\n            if ((updateAllResults || update) && hyp !== mainHyp.hyp && !hyp.hidden) {\r\n                hyp.setSettings();\r\n                hyp.setStatPower(alpha, globalSettings.sampleSize);\r\n                hypotheses[i].update = false;\r\n                hyp.updateResultsHtml(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    static setGlobalSettings() {\r\n        const globalSettings = ModuleIntegrator.globalSettings;\r\n        const formData = new FormData(globalSettings.form);\r\n        globalSettings.name = formData.get('name');\r\n        globalSettings.FWER = Number(formData.get('FWER'));\r\n        if (globalSettings.FWER <= 0 || globalSettings.FWER >= 100) {\r\n            UIControls.showError(UIControls.FWERInput, 'Значение FWER должно быть больше, чем 0% и меньше, чем 100%');\r\n        }\r\n        globalSettings.mainHypId = Number(formData.get('mainHypothesis'));\r\n        globalSettings.power = Number(formData.get('power'));\r\n        if (globalSettings.power <= 0 || globalSettings.power >= 100) {\r\n            UIControls.showError(UIControls.powerInput, 'Значение мощности должно быть больше, чем 0% и меньше, чем 100%');\r\n        }\r\n    }\r\n\r\n    static setMainSettings() {\r\n        const globalSettings = ModuleIntegrator.globalSettings;\r\n        const mainHyp = ModuleIntegrator.hypotheses[globalSettings.mainHypId];\r\n        mainHyp.hyp.setSettings();\r\n        const n = mainHyp.hyp.getN(globalSettings.getAlpha(false), globalSettings.power);\r\n        globalSettings.preciseSampleSize = n;\r\n        globalSettings.sampleSize = Math.ceil(n);\r\n        mainHyp.update = false;\r\n    }\r\n\r\n    static updateResultsGlob() {\r\n        const globalSettings = ModuleIntegrator.globalSettings;\r\n\r\n        UIControls.resName.textContent = globalSettings.name;\r\n        UIControls.resFwer.textContent = Number.resultForm(globalSettings.FWER);\r\n        UIControls.resNumber.textContent = globalSettings.unhiddenCounter;\r\n        UIControls.resImportance.textContent = globalSettings.getAlpha();\r\n        UIControls.resMainHyp.textContent = globalSettings.getMainHypName();\r\n        UIControls.resPower.textContent = Number.resultForm(globalSettings.power);\r\n        UIControls.resSampleSizePrecise.textContent = Number.resultForm(globalSettings.preciseSampleSize, false);\r\n        UIControls.resSampleSize.textContent = Number.resultForm(globalSettings.sampleSize);\r\n    }\r\n\r\n    //extra functions \r\n\r\n    static hideUnhideHyp(id) {\r\n        const hypotheses = ModuleIntegrator.hypotheses;\r\n        const hyp = hypotheses[id];\r\n        const globalSettings = ModuleIntegrator.globalSettings;\r\n        const optionEl = UIControls.mainHypSelect.querySelector('.main-hypothesis__option_' + id);\r\n        if (hyp.hidden) {\r\n            unhide();\r\n        }\r\n        else {\r\n            hide();\r\n        }\r\n        ModuleIntegrator.setSettings('glob');\r\n\r\n        function hide() {\r\n            optionEl.disabled = true;\r\n            globalSettings.unhiddenCounter--;\r\n            hyp.hidden = true;\r\n            if (id === globalSettings.mainHypId) {\r\n                optionEl.selected = false;\r\n                if (globalSettings.unhiddenCounter === 0) {\r\n                    globalSettings.mainHypId = null;\r\n                    UIControls.mainHypSelectNullOption.selected = true;\r\n                }\r\n                else {\r\n                    globalSettings.mainHypId = hypotheses.findIndex((el) => !el.hidden);\r\n                    UIControls.mainHypSelect.querySelector('.main-hypothesis__option_' + globalSettings.mainHypId).selected = true;\r\n                }\r\n            }\r\n\r\n            hyp.hyp.changeVisibilityResultsHtml(true);\r\n        }\r\n\r\n        function unhide() {\r\n            optionEl.disabled = false;\r\n\r\n            if (globalSettings.unhiddenCounter === 0) {\r\n                globalSettings.mainHypId = id;\r\n                optionEl.selected = true;\r\n            }\r\n\r\n            globalSettings.unhiddenCounter++;\r\n            hyp.hidden = false;\r\n\r\n            hyp.hyp.changeVisibilityResultsHtml(false);\r\n        }\r\n    }\r\n\r\n    static nameChange(id, name) {\r\n        const hyp = ModuleIntegrator.hypotheses[id];\r\n        if (hyp) {\r\n            hyp.hyp.setName(name);\r\n            ModuleIntegrator.globalSettings.updateHypOption(id, name);\r\n        }\r\n    }\r\n\r\n    static duplicateHyp(id) {\r\n        const hyp = ModuleIntegrator.hypotheses[id];\r\n        if (hyp) {\r\n            ModuleIntegrator.addHypothesis(hyp.hyp.constructor.getModuleTypeId(), hyp.hyp);\r\n        }\r\n    }\r\n\r\n    static deleteHyp(id) {\r\n        const hyp = ModuleIntegrator.hypotheses[id];\r\n        if (!hyp) {\r\n            return;\r\n        }\r\n        const globalSettings = ModuleIntegrator.globalSettings;\r\n        const optionEl = UIControls.mainHypSelect.querySelector('.main-hypothesis__option_' + id);\r\n        ModuleIntegrator.globalSettings.deleteHypOption(id);\r\n\r\n        globalSettings.hypCounter--;\r\n        if (!hyp.hidden) {\r\n            globalSettings.unhiddenCounter--;\r\n        }\r\n\r\n        hyp.hyp.deleteSelf();\r\n        ModuleIntegrator.hypotheses[id] = null;\r\n\r\n        for (let i = id; i < globalSettings.hypCounter; i++) {\r\n            ModuleIntegrator.hypotheses[i] = ModuleIntegrator.hypotheses[i + 1];\r\n            ModuleIntegrator.hypotheses[i].hyp.setId(i);\r\n        }\r\n\r\n        ModuleIntegrator.hypotheses = ModuleIntegrator.hypotheses.slice(0, -1);\r\n\r\n        optionEl.selected = false;\r\n        if (globalSettings.unhiddenCounter === 0) {\r\n            globalSettings.mainHypId = null;\r\n            UIControls.mainHypSelectNullOption.selected = true;\r\n        }\r\n        else {\r\n            globalSettings.mainHypId = ModuleIntegrator.hypotheses.findIndex((el) => !el.hidden);\r\n            UIControls.mainHypSelect.querySelector('.main-hypothesis__option_' + globalSettings.mainHypId).selected = true;\r\n        }\r\n\r\n        ModuleIntegrator.setSettings('glob');\r\n    }\r\n\r\n    static exportResults() {\r\n        const resultsBlock = UIControls.resultsContainer;\r\n        const htmlString = getHtmlString(resultsBlock);\r\n\r\n        const blob = new Blob([htmlString], { type: 'text/html' });\r\n\r\n        const url = URL.createObjectURL(blob);\r\n\r\n        const link = document.createElement('a');\r\n        link.download = `${ModuleIntegrator.globalSettings.name}.html`;\r\n        link.href = url;\r\n        link.click();\r\n\r\n        URL.revokeObjectURL(url);\r\n\r\n        function getHtmlString(resultsBlock) {\r\n            return `\r\n            <html>\r\n              <head>\r\n                <style>\r\n                    body,\r\n                    h1,\r\n                    h2,\r\n                    h3,\r\n                    h4,\r\n                    p,\r\n                    ul[class],\r\n                    ol[class],\r\n                    li,\r\n                    figure,\r\n                    figcaption,\r\n                    fieldset,\r\n                    blockquote,\r\n                    dl,\r\n                    dd {\r\n                        margin: 0;\r\n                    }\r\n                    body {\r\n                        font-family: \"Open Sans\", sans-serif;\r\n                        color: #000000;\r\n                        font-weight: 400;\r\n                        font-size: 14px;\r\n                        line-height: 19px;\r\n                        min-height: 100vh;\r\n                        scroll-behavior: smooth;\r\n                        text-rendering: optimizeSpeed;\r\n                    }\r\n\r\n                    p, th , td {\r\n                        color: #000000;\r\n                        font-weight: 400;\r\n                        font-size: 14px;\r\n                        line-height: 19px;\r\n                    }\r\n                    \r\n                    h1 {\r\n                        font-weight: 700;\r\n                        font-size: 24px;\r\n                        line-height: 33px;\r\n                    }\r\n                    \r\n                    h2 {\r\n                        font-weight: 700;\r\n                        font-size: 20px;\r\n                        line-height: 27px;\r\n                    }\r\n                    \r\n                    b {\r\n                        font-weight: 600;\r\n                        font-size: 14px;\r\n                        line-height: 19px;\r\n                    }\r\n                    \r\n                    small {\r\n                        font-weight: 400;\r\n                        font-size: 12px;\r\n                        line-height: 16px;\r\n                    }\r\n\r\n                    .results__container {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        height: 100%;\r\n                        gap: 56px;\r\n                        padding: 10px 24px 24px 24px;\r\n                        max-width: 1048px;\r\n\r\n                        font-weight: 400;\r\n                        font-size: 14px;\r\n                    }\r\n\r\n                    .results__header {\r\n                        overflow-wrap: break-word;\r\n                        max-width: 100%;\r\n                    }\r\n\r\n                    .results__block {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        gap: 24px;\r\n                        min-width: 1000px;\r\n                        max-width: 1000px;\r\n                        flex-shrink: 1;\r\n                    }\r\n                \r\n                    .results__block-inner {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        gap: 8px;\r\n                        max-width: 1000px;\r\n                    }\r\n                \r\n                    .results__table {\r\n                        border-bottom: 2px solid #000000;\r\n                        border-collapse: collapse;\r\n                        width: max-content;\r\n                        max-width: 100%;\r\n                    }\r\n\r\n                    .results__table th {\r\n                        white-space: nowrap;\r\n                        border-top: 1px solid #000000;\r\n                        border-bottom: 1px solid #000000;\r\n                    }\r\n            \r\n                    .results__table th,\r\n                    .results__table td {\r\n                        padding: 0 16px 0 16px;\r\n                        text-align: center;\r\n                    }\r\n            \r\n                    .results__table td {\r\n                        white-space: normal;\r\n                        word-wrap: break-word;\r\n                        width: max-content;\r\n                        max-width: 200px;\r\n                    }\r\n            \r\n                    .results__table caption {\r\n                        caption-side: bottom;\r\n                        text-align: left;\r\n                    }\r\n                </style>\r\n              </head>\r\n              <body>\r\n                ${resultsBlock.outerHTML}\r\n              </body>\r\n            </html>\r\n          `;\r\n        }\r\n    }\r\n}\r\n\r\n","import DataControls from '@data/DataControls';\r\nimport ModuleIntegrator from '@/ModuleIntegrator';\r\n\r\nclass UIControls {\r\n\r\n    static body;\r\n    static moduleListElement;\r\n    static modulesItems = [];\r\n    static burgerMenu;\r\n    static burgerMenuInput;\r\n    static fadeScreen;\r\n    static menuBtns = [];\r\n    static csvUploadBtn;\r\n    static exportBtn;\r\n    static settingsForm;\r\n    static dataContainer;\r\n    static dataTable;\r\n    static dataFooter;\r\n    static footerList;\r\n    static dataFooterElements = {\r\n        old: [],\r\n        new: []\r\n    };\r\n    static calculationWindow;\r\n    static parameters;\r\n    static parametersContainer;\r\n    static parametersGlobItem;\r\n    static FWERInput;\r\n    static powerInput;\r\n    static mainHypSelect;\r\n    static mainHypSelectNullOption;\r\n\r\n    static resizeBarsEl = [];\r\n    static results;\r\n    static resultsContainer;\r\n    static resultsLoader;\r\n\r\n    static resBlock;\r\n    static resFwer;\r\n    static resNumber;\r\n    static resImportance;\r\n    static resMainHyp;\r\n    static resPower;\r\n    static resSampleSizePrecise;\r\n    static resSampleSize;\r\n\r\n\r\n    static modalVarType;\r\n    static varIcons = {\r\n        old: [],\r\n        new: []\r\n    };\r\n    static varTypesBtns = [];\r\n    static varTypesForm;\r\n    static rangTable;\r\n    static binSettings;\r\n    static binTables;\r\n    static varTypesLevelControls = {\r\n        up: undefined,\r\n        down: undefined\r\n    };\r\n    static varTypesSwitchBtn;\r\n    static modalVarTypeBtns;\r\n    static curIcon;\r\n    static modalSettings;\r\n    static dataSettingsBtns = {\r\n        old: [],\r\n        new: []\r\n    };\r\n    static modalSettingsBtns;\r\n    static errorElement;\r\n\r\n    static initConstUIControls() {\r\n        UIControls.initConstElements();\r\n        UIControls.initConstListeners();\r\n    }\r\n\r\n    static initConstElements() {\r\n        UIControls.body = document.getElementsByTagName('body')[0];\r\n        UIControls.moduleListElement = document.querySelector('.modules__list');\r\n\r\n        UIControls.dataContainer = document.querySelector('.data__container');\r\n        UIControls.dataFooter = UIControls.dataContainer.querySelector('.data__footer');\r\n        UIControls.footerList = UIControls.dataContainer.querySelector('.footer__list');\r\n        UIControls.burgerMenu = document.querySelector('.burger-menu');\r\n        UIControls.burgerMenuInput = UIControls.burgerMenu.querySelector('#burger-menu__input');\r\n        UIControls.fadeScreen = document.querySelector('.fade');\r\n        UIControls.menuBtns = [...document.querySelectorAll('.sidebar__item')];\r\n\r\n        UIControls.csvUploadBtn = document.getElementById('csvUpload');\r\n        UIControls.exportBtn = document.getElementById('export-results');\r\n        UIControls.settingsForm = document.getElementById('settings-form');\r\n\r\n        UIControls.calculationWindow = document.querySelector('.calculation-window');\r\n        UIControls.resizeBarsEl = [...UIControls.calculationWindow.querySelectorAll('.resize-bar')];\r\n        UIControls.results = UIControls.calculationWindow.querySelector('.results');\r\n        UIControls.resultsLoader = UIControls.results.querySelector('.loader');\r\n        UIControls.resultsContainer = UIControls.results.querySelector('.results__container');\r\n\r\n        UIControls.resBlock = UIControls.resultsContainer.querySelector('#global-results');\r\n        UIControls.resName = UIControls.resBlock.querySelector('#results-name');\r\n        UIControls.resFwer = UIControls.resBlock.querySelector('#results-FWER');\r\n        UIControls.resNumber = UIControls.resBlock.querySelector('#results-number');\r\n        UIControls.resImportance = UIControls.resBlock.querySelector('#results-importance');\r\n        UIControls.resMainHyp = UIControls.resBlock.querySelector('#results-main-hyp');\r\n        UIControls.resPower = UIControls.resBlock.querySelector('#results-power');\r\n        UIControls.resSampleSize = UIControls.resBlock.querySelector('#results-sample-size');\r\n        UIControls.resSampleSizePrecise = UIControls.resBlock.querySelector('#results-sample-size-precise');\r\n\r\n        UIControls.parameters = UIControls.calculationWindow.querySelector('.parameters');\r\n        UIControls.parametersContainer = UIControls.parameters.querySelector('.parameters__container');\r\n        UIControls.parametersGlobItem = UIControls.parameters.querySelector('#parameters__item_glob');\r\n        UIControls.FWERInput = UIControls.parametersGlobItem.querySelector('#FWER-input');\r\n        UIControls.powerInput = UIControls.parametersGlobItem.querySelector('#power-input');\r\n        UIControls.mainHypSelect = UIControls.parametersContainer.querySelector('#main-hypothesis');\r\n        UIControls.mainHypSelectNullOption = UIControls.mainHypSelect.querySelector('.main-hypothesis__option_null');\r\n\r\n        UIControls.modalVarType = document.querySelector('.modal-var-types');\r\n        UIControls.varTypesForm = UIControls.modalVarType.querySelector('#var-type-form');\r\n        UIControls.rangTable = UIControls.modalVarType.querySelector('.modal-var-types__rang-table-body');\r\n        UIControls.binSettings = UIControls.modalVarType.querySelector('.modal-var-types__binary-settings');\r\n        UIControls.binTables = [...UIControls.modalVarType.querySelectorAll('.modal-var-types__binary-table-body')];\r\n        UIControls.varTypesLevelControls.up = UIControls.modalVarType.querySelector('.switch-button_up');\r\n        UIControls.varTypesLevelControls.down = UIControls.modalVarType.querySelector('.switch-button_down');\r\n        UIControls.modalVarTypeBtns = [...UIControls.modalVarType.querySelectorAll('.modal-var-types__btn')];\r\n        UIControls.varTypesSwitchBtn = UIControls.binSettings.querySelector('.switch-button');\r\n        UIControls.modalSettings = document.querySelector('.modal-settings');\r\n        UIControls.modalSettingsBtns = [...UIControls.modalSettings.querySelectorAll('.modal-settings__btn')];\r\n\r\n        UIControls.errorElement = document.querySelector('#error-show');\r\n    }\r\n\r\n    static initConstListeners() {\r\n        UIControls.addBurgerListener();\r\n        // UIControls.addMenuBtnsListeners();\r\n        UIControls.addResizeBarsListeners();\r\n        UIControls.addWindowResizeListeners();\r\n        UIControls.addModalSettingsListener();\r\n        UIControls.addModalVarChooseListener();\r\n        UIControls.addCsvUploadListeners();\r\n        UIControls.addExportBtnListeners();\r\n    }\r\n\r\n    static initNewSheetControls() {\r\n        UIControls.initNewSheetElements();\r\n        UIControls.initNewSheetListeners();\r\n    }\r\n\r\n    static initNewSheetElements() {\r\n        UIControls.dataFooterElements.new = [...UIControls.dataFooter.querySelectorAll('.footer__item_new')];\r\n        UIControls.varIcons.new = [...UIControls.dataContainer.querySelectorAll('.data__var-icon_new')];\r\n        UIControls.dataSettingsBtns.new = [...UIControls.dataContainer.querySelectorAll('.dataSettingsBtn_new')];\r\n    }\r\n\r\n    static initNewSheetListeners() {\r\n        UIControls.addVarIconsListeners();\r\n        UIControls.addDataSettingsListener();\r\n        UIControls.addFooterItemListeners();\r\n    }\r\n\r\n    // LISTENERS //\r\n\r\n    static addBurgerListener() {\r\n        UIControls.burgerMenu.addEventListener('click', UIControls.toggleMenu);\r\n        UIControls.fadeScreen.addEventListener('click', UIControls.toggleMenu);\r\n        // UIControls.fadeScreen.addEventListener('click', UIControls.fadeScreenTriggerFadeOut);\r\n    }\r\n\r\n    // static addMenuBtnsListeners() {\r\n    //     UIControls.menuBtns.forEach(btn => {\r\n    //         btn.addEventListener('click', UIControls.toggleMenu);\r\n    //     });\r\n    // }\r\n\r\n    static addCsvUploadListeners() {\r\n        UIControls.csvUploadBtn.addEventListener('click', function () {\r\n            this.value = null;\r\n        });\r\n\r\n        UIControls.csvUploadBtn.addEventListener('change', (event) => {\r\n            DataControls.readSingleFile(event);\r\n            UIControls.toggleMenu();\r\n        });\r\n    }\r\n\r\n    static addExportBtnListeners() {\r\n        UIControls.exportBtn.addEventListener('click', () => {\r\n            ModuleIntegrator.exportResults();\r\n            UIControls.toggleMenu();\r\n        });\r\n    }\r\n\r\n    static addResizeBarsListeners() {\r\n        UIControls.resizeBarsEl.forEach(el => {\r\n            el.addEventListener('mousedown', mousedown);\r\n        });\r\n\r\n        function mousedown(e) {\r\n\r\n            window.addEventListener('mousemove', mousemove);\r\n            window.addEventListener('mouseup', mouseup);\r\n\r\n            const startX = e.clientX;\r\n            const startWidth = UIControls.calculationWindow.offsetWidth;\r\n\r\n\r\n            function mousemove(event) {\r\n                event.preventDefault();\r\n                UIControls.calculationWindow.style.width = (startWidth - (event.clientX - startX)) + 'px';\r\n            }\r\n\r\n            function mouseup() {\r\n                UIControls.resizeBarCheckBounds();\r\n                UIControls.footerChange();\r\n\r\n                window.removeEventListener('mousemove', mousemove);\r\n                window.removeEventListener('mouseup', mouseup);\r\n            }\r\n        }\r\n    }\r\n\r\n    static addWindowResizeListeners() {\r\n        window.addEventListener('DOMContentLoaded', UIControls.footerChange);\r\n        window.addEventListener('resize', UIControls.footerChange);\r\n        window.addEventListener('resize', UIControls.resizeBarCheckBounds);\r\n    }\r\n\r\n    static addFooterItemListeners() {\r\n        UIControls.dataFooterElements.new.forEach(el => {\r\n            el.addEventListener('click', () => DataControls.selectSheet(el.id));\r\n            el.classList.remove('footer__item_new');\r\n            UIControls.dataFooterElements.old.push(el);\r\n        });\r\n        UIControls.dataFooterElements.new = [];\r\n    }\r\n\r\n    static addVarIconsListeners() {\r\n        UIControls.varIcons.new.forEach(el => {\r\n            el.addEventListener('click', (event) => {\r\n                const create = DataControls.createVarSettings.bind(null, event.currentTarget.getAttribute('id'));\r\n                UIControls.openModal(event, UIControls.modalVarType, create);\r\n            });\r\n            el.classList.remove('data__var-icon_new');\r\n        });\r\n        UIControls.varIcons.new = [];\r\n    }\r\n\r\n    static addDataSettingsListener() {\r\n        UIControls.dataSettingsBtns.new.forEach(el => {\r\n            el.addEventListener('click', (event) => {\r\n                UIControls.openModal(event, UIControls.modalSettings);\r\n            });\r\n            el.classList.remove('dataSettingsBtn_new');\r\n            UIControls.dataSettingsBtns.old.push(el);\r\n        })\r\n        UIControls.dataSettingsBtns.new = [];\r\n    }\r\n\r\n    static addModalSettingsListener() {\r\n        UIControls.modalSettings.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n        });\r\n\r\n        UIControls.settingsForm.addEventListener('submit', (event) => {\r\n            DataControls.submitSettings(event, new FormData(UIControls.settingsForm));\r\n        });\r\n\r\n        UIControls.modalSettingsBtns.forEach(btn => {\r\n            btn.addEventListener('click', () => UIControls.modalSettings.style.display = 'none');\r\n        });\r\n\r\n        UIControls.modalSettings.querySelector('.modal-window__header').addEventListener('mousedown', (event) => {\r\n            UIControls.dragMouseDown(event, UIControls.modalSettings);\r\n        });\r\n    }\r\n\r\n    static addModalVarChooseListener() {\r\n        UIControls.modalVarType.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n        });\r\n\r\n        UIControls.varTypesLevelControls.up.addEventListener('click', () => { moveLabel(false) });\r\n        UIControls.varTypesLevelControls.down.addEventListener('click', () => { moveLabel(true) });\r\n        UIControls.varTypesSwitchBtn.addEventListener('click', switchLabel);\r\n\r\n        UIControls.varTypesForm.addEventListener('submit', (event) => {\r\n            event.preventDefault();\r\n            const newOrder = [...UIControls.rangTable.querySelectorAll('.var-table__item')].map(el => Number(el.dataset.order));\r\n            const twoTables = {\r\n                group0: [...UIControls.binTables[0].querySelectorAll('.var-table__item')].map(el => el.dataset.anchor),\r\n                group1: [...UIControls.binTables[1].querySelectorAll('.var-table__item')].map(el => el.dataset.anchor)\r\n            };\r\n            DataControls.setVarSettings(new FormData(UIControls.varTypesForm), newOrder, twoTables);\r\n        });\r\n\r\n        UIControls.modalVarTypeBtns.forEach(btn => {\r\n            btn.addEventListener('click', () => UIControls.modalVarType.style.display = 'none');\r\n        });\r\n\r\n        UIControls.modalVarType.querySelector('.modal-window__header').addEventListener('mousedown', (event) => {\r\n            UIControls.dragMouseDown(event, UIControls.modalVarType);\r\n        });\r\n\r\n\r\n        function switchLabel() {\r\n            const curLabel = UIControls.binSettings.querySelector('input[type=\"radio\"]:checked').parentElement;\r\n            const curTableBody = curLabel.parentElement;\r\n\r\n            curTableBody.removeChild(curLabel);\r\n\r\n            const insertChild = (toTable) => {\r\n                toTable.insertBefore(curLabel, toTable.querySelector('.var-table__anchor_' + curLabel.dataset.anchor));\r\n            }\r\n\r\n            if (curTableBody.isSameNode(UIControls.binTables[0])) {\r\n                insertChild(UIControls.binTables[1]);\r\n            }\r\n            else {\r\n                insertChild(UIControls.binTables[0]);\r\n            }\r\n\r\n        }\r\n        function moveLabel(isDown) {\r\n            const rangTable = UIControls.rangTable;\r\n            const curLabel = rangTable.querySelector('input[type=\"radio\"]:checked').parentElement;\r\n            if (!curLabel)\r\n                return;\r\n\r\n            let sibling;\r\n            if (isDown && curLabel.nextElementSibling) {\r\n                sibling = curLabel.nextElementSibling;\r\n                rangTable.removeChild(curLabel);\r\n                rangTable.insertBefore(curLabel, sibling.nextElementSibling);\r\n            }\r\n            else if (!isDown && curLabel.previousElementSibling) {\r\n                sibling = curLabel.previousElementSibling;\r\n                rangTable.removeChild(curLabel);\r\n                rangTable.insertBefore(curLabel, sibling);\r\n            }\r\n        }\r\n    }\r\n\r\n    // MODULE LISTENERS //\r\n\r\n    static addModuleBtnsListeners() {\r\n        const modulesItems = [...document.querySelectorAll('.modules__item')];\r\n        UIControls.modulesItems = modulesItems;\r\n        modulesItems.forEach(el => {\r\n            const id = el.dataset.moduleId;\r\n            el.addEventListener('click', () => {\r\n                ModuleIntegrator.addHypothesis(id);\r\n            });\r\n        });\r\n    }\r\n\r\n    static addModuleFormListeners(element, moduleCallbackFunction, isGlob) {\r\n        const elementFormMain = element.querySelector('.module-option-form');\r\n        const triggers = [...element.querySelectorAll('.form-change-trigger')];\r\n\r\n        if (isGlob) {\r\n            triggers.forEach(el => el.addEventListener('change', () => {\r\n                ModuleIntegrator.setSettings('glob', elementFormMain, elementFormMain.querySelector('.target-table-data'));\r\n            }));\r\n            return;\r\n        }\r\n\r\n        triggers.forEach(el => el.addEventListener('change', () => {\r\n            ModuleIntegrator.setSettings(getId(element), elementFormMain, elementFormMain.querySelector('.target-table-data'));\r\n        }));\r\n\r\n        const elementFormSheets = [...element.querySelectorAll('.sheet-form')];\r\n        elementFormSheets.forEach(el => {\r\n            el.addEventListener('change', () => {\r\n                ModuleIntegrator.refreshVarsOfHyp(getId(element), el);\r\n            });\r\n        });\r\n\r\n        // manual input listener\r\n\r\n        const manualInput = element.querySelector('.manual-input-on');\r\n        const dataInputTwo = element.querySelector('.data-input-two');\r\n        const dataInputGroup = element.querySelector('.data-input-group');\r\n        const tableTwo = element.querySelector('.two-column-var');\r\n        const tableGroup = element.querySelector('.grouping-var');\r\n        const testTypeBlock = element.querySelector('.option-block__test-type');\r\n        const manualEllements = [...element.querySelectorAll(`.option-block__manual-input`)];\r\n\r\n        manualInput?.addEventListener('click', () => {\r\n            const testName = testTypeBlock.querySelector('input:checked').value;\r\n            const manualEllement = element.querySelector(`.option-block__${testName}`);\r\n            manualEllement.classList.remove('option-block_hidden');\r\n            tableTwo?.classList.add('option-block_hidden');\r\n            tableGroup?.classList.add('option-block_hidden');\r\n        });\r\n\r\n        dataInputTwo?.addEventListener('click', () => {\r\n            hideAllManualOptionBlocks();\r\n            tableGroup?.classList.add('option-block_hidden');\r\n            tableTwo.classList.remove('option-block_hidden');\r\n        });\r\n\r\n        dataInputGroup?.addEventListener('click', () => {\r\n            hideAllManualOptionBlocks();\r\n            tableTwo?.classList.add('option-block_hidden');\r\n            tableGroup.classList.remove('option-block_hidden');\r\n        });\r\n\r\n        if (testTypeBlock) {\r\n            const testTypeInputs = [...testTypeBlock.querySelectorAll('input')];\r\n            testTypeInputs.forEach((el) => {\r\n                el.addEventListener('click', () => {\r\n                    if (manualInput.checked) {\r\n                        hideAllManualOptionBlocks();\r\n                        const manualEllement = element.querySelector(`.option-block__${el.value}`);\r\n                        manualEllement.classList.remove('option-block_hidden');\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        function hideAllManualOptionBlocks() {\r\n            manualEllements?.forEach((el) => {\r\n                el.classList.add('option-block_hidden');\r\n            });\r\n        }\r\n\r\n        //unique listeners\r\n        if (moduleCallbackFunction) {\r\n            moduleCallbackFunction();\r\n        }\r\n\r\n        //extra\r\n\r\n        //hide\r\n\r\n        const hideBtn = element.querySelector('.parameters__hide-button').querySelector('input');\r\n        hideBtn.addEventListener('click', (e) => {\r\n            ModuleIntegrator.hideUnhideHyp(getId(element));\r\n        });\r\n\r\n\r\n\r\n        //rename\r\n\r\n        const renamebtn = element.querySelector('.parameters__edit-button');\r\n        const elementHeader = element.querySelector('.parameters__title');\r\n        const elementHeaderInput = element.querySelector('.parameters__title-input');\r\n        elementHeaderInput.value = elementHeader.textContent;\r\n        const focusListener = function () {\r\n            submitNewName();\r\n        }\r\n        const enterListener = function (e) {\r\n            if (e.key === 'Enter')\r\n                submitNewName();\r\n        }\r\n\r\n        renamebtn.addEventListener('click', () => {\r\n            elementHeader.style.display = 'none';\r\n            elementHeaderInput.style.display = 'block';\r\n            elementHeaderInput.focus();\r\n            elementHeaderInput.addEventListener('focusout', focusListener);\r\n            elementHeaderInput.addEventListener('keypress', enterListener);\r\n        });\r\n\r\n        function submitNewName() {\r\n            if (elementHeaderInput.value.trim() === '') {\r\n                UIControls.showError(elementHeaderInput, 'Заполните это поле');\r\n                return;\r\n            }\r\n            elementHeaderInput.removeEventListener('focusout', focusListener);\r\n            elementHeaderInput.removeEventListener('keypress', enterListener);\r\n            elementHeader.style.display = 'inline';\r\n            elementHeaderInput.style.display = 'none';\r\n            ModuleIntegrator.nameChange(getId(element), elementHeaderInput.value);\r\n        }\r\n\r\n        //dublicate\r\n\r\n        const dupbtn = element.querySelector('.parameters__duplicate-button');\r\n        dupbtn.addEventListener('click', () => {\r\n            ModuleIntegrator.duplicateHyp(getId(element));\r\n        });\r\n\r\n        //delete \r\n\r\n        const deleteBtn = element.querySelector('.parameters__delete-button');\r\n        deleteBtn.addEventListener('click', () => {\r\n            ModuleIntegrator.deleteHyp(getId(element));\r\n        });\r\n\r\n        function getId(el) {\r\n            return Number(el.querySelector('.module-option-form').dataset.id);\r\n        }\r\n    }\r\n\r\n    // COMMON FUNCTIONS //\r\n\r\n    static resizeBarCheckBounds() {\r\n        const calculationWindowWidth = UIControls.calculationWindow.offsetWidth;\r\n        const resizeBarWidth = UIControls.resizeBarsEl[0].offsetWidth;\r\n        const resultsWidth = resizeBarWidth + UIControls.results.offsetWidth;\r\n        const parametersWidth = resizeBarWidth + UIControls.parameters.offsetWidth;\r\n        const bodyWidth = UIControls.body.clientWidth;\r\n\r\n        if (resultsWidth >= bodyWidth) {\r\n            UIControls.calculationWindow.style.width = parametersWidth + bodyWidth + 'px';\r\n        }\r\n        else if (calculationWindowWidth < resizeBarWidth) {\r\n            UIControls.calculationWindow.style.width = resizeBarWidth + 'px';\r\n        }\r\n    }\r\n\r\n    static toggleMenu() {\r\n        if (UIControls.burgerMenuInput.checked)\r\n            fadeOut();\r\n        else\r\n            fadeIn();\r\n\r\n        function fadeIn() {\r\n            UIControls.fadeScreen.style['z-index'] = '1';\r\n            UIControls.burgerMenuInput.checked = true;\r\n            UIControls.fadeScreen.style.opacity = '1';\r\n        }\r\n\r\n        function fadeOut() {\r\n            UIControls.fadeScreen.style['z-index'] = '-1';\r\n            UIControls.burgerMenuInput.checked = false;\r\n            UIControls.fadeScreen.style.opacity = '0';\r\n        }\r\n    }\r\n\r\n    static footerChange() {\r\n        const dataTable = UIControls.dataContainer.querySelector('.data__table_shown');\r\n        const dataContainer = UIControls.dataContainer;\r\n        const dataFooter = UIControls.dataFooter;\r\n\r\n        if (!dataTable) {\r\n            dataFooter.style.width = 0;\r\n            return;\r\n        }\r\n        dataFooter.style.width = dataContainer.offsetWidth > dataTable.offsetWidth ? '100%' : dataTable.offsetWidth + 'px';\r\n        if (dataContainer.offsetHeight > dataTable.offsetHeight) {\r\n            dataFooter.style.position = 'absolute';\r\n        }\r\n        else {\r\n            dataFooter.style.position = 'sticky';\r\n        }\r\n    }\r\n\r\n    static openModal(event, modalWindow, createModalFunc) {\r\n        const curIcon = event.currentTarget;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        modalWindow.style.left = curIcon.getBoundingClientRect().right + 'px';\r\n        modalWindow.style.top = curIcon.getBoundingClientRect().bottom + 'px';\r\n        if (createModalFunc) {\r\n            createModalFunc();\r\n        }\r\n        modalWindow.style.display = 'block';\r\n\r\n        // Убрать окно по клику снаружи\r\n\r\n        window.addEventListener('click', closeModal, { once: true });\r\n        function closeModal() {\r\n            modalWindow.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    static dragMouseDown(e, elmnt) {\r\n        let pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n        pos3 = e.clientX;\r\n        pos4 = e.clientY;\r\n        document.onmouseup = closeDragElement;\r\n        document.onmousemove = elementDrag;\r\n\r\n        function elementDrag(e) {\r\n            e = e || window.event;\r\n            e.preventDefault();\r\n            pos1 = pos3 - e.clientX;\r\n            pos2 = pos4 - e.clientY;\r\n            pos3 = e.clientX;\r\n            pos4 = e.clientY;\r\n            elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\r\n            elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\r\n        }\r\n\r\n        function closeDragElement() {\r\n            document.onmouseup = null;\r\n            document.onmousemove = null;\r\n        }\r\n    }\r\n\r\n    static resultsLoadingShow() {\r\n        UIControls.resultsContainer.style.opacity = '0.1';\r\n        UIControls.resultsLoader.style.display = 'block';\r\n    }\r\n\r\n    static resultsLoadingHide() {\r\n        UIControls.resultsContainer.style.opacity = '1';\r\n        UIControls.resultsLoader.style.display = 'none';\r\n    }\r\n\r\n    static showError(el, errorText) {\r\n        const rect = el.getBoundingClientRect();\r\n        const x = countCoord((rect.x + rect.width / 2), window.innerWidth);\r\n        const y = countCoord((rect.y + rect.height), window.innerHeight);\r\n        function countCoord(c, max, gap = 10) {\r\n            if (c > gap) {\r\n                const realMax = max - gap;\r\n                if (c < realMax) {\r\n                    return c;\r\n                }\r\n                else {\r\n                    return realMax;\r\n                }\r\n            }\r\n            else {\r\n                return gap;\r\n            }\r\n        }\r\n\r\n        UIControls.errorElement.style.left = x + 'px';\r\n        UIControls.errorElement.style.top = y + 'px';\r\n        UIControls.errorElement.setCustomValidity(errorText);\r\n        UIControls.errorElement.reportValidity();\r\n    }\r\n}\r\n\r\nwindow.UIControls = UIControls;\r\n\r\n","import '@styles/styles.scss';\r\nimport '@/utils/utils';\r\nimport '@/UIControls';\r\nimport ModuleIntegrator from '@/ModuleIntegrator';\r\n// import DataControls from '@data/DataControls';\r\n// import UIControls from '@/UIControls';\r\n// import { binTest } from '@/tests';\r\n\r\nUIControls.initConstUIControls();\r\nModuleIntegrator.createModuleButtons();","import Sheet from '@data/Sheet';\r\nimport Settings from '@data/Settings';\r\n\r\nexport default class DataControls {\r\n    static #sheets = [];\r\n    static #currentSheet;\r\n\r\n    static readSingleFile(event) {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            DataControls.addSheet(file);\r\n        } else {\r\n            alert(\"Failed to load file\");\r\n        }\r\n    }\r\n\r\n    static submitSettings(event, formData) {\r\n        event.preventDefault();\r\n        const applyTo = formData.get('apply-to');\r\n        const curSheet = DataControls.#currentSheet;\r\n\r\n        if (applyTo === 'this') {\r\n            curSheet.setSettings(formData);\r\n        }\r\n        else if (applyTo === 'all') {\r\n            console.log('all', formData);\r\n            Settings.setGlobalSettings(formData);\r\n            DataControls.#sheets.forEach(sheet => sheet.setSettings(formData));\r\n        }\r\n        curSheet.applySettingsAndShow();\r\n    }\r\n\r\n    static createVarSettings(varId) {\r\n        DataControls.#currentSheet.createVarSettings(varId);\r\n    }\r\n\r\n    static setVarSettings(formData, newOrder, twoTables) {\r\n        DataControls.#currentSheet.setVarSettings(formData, newOrder, twoTables);\r\n    }\r\n\r\n    static addSheet(file) {\r\n        const arrayLength = DataControls.#sheets.length;\r\n        DataControls.#currentSheet?.hide();\r\n        const name = file.name.split('.').slice(0, -1).join('');\r\n        const newSheet = new Sheet(name, file, arrayLength)\r\n        DataControls.#sheets.push(newSheet);\r\n        DataControls.#currentSheet = newSheet;\r\n\r\n    }\r\n\r\n    static selectSheet(sheetId) {\r\n        const sheet = DataControls.#sheets[sheetId];\r\n        if (DataControls.#currentSheet == sheet)\r\n            return;\r\n\r\n        DataControls.#currentSheet?.hide();\r\n        DataControls.#currentSheet = sheet;\r\n        if (sheet.readyToShow()) {\r\n            sheet.show();\r\n        }\r\n        else {\r\n            sheet.applySettingsAndShow();\r\n        }\r\n    }\r\n\r\n    static getListOfSheets() {\r\n        return this.#sheets.map((el, index) => {\r\n            return {\r\n                name: el.getName(),\r\n                id: el.getID()\r\n            };\r\n        })\r\n    }\r\n\r\n    static getSheetById(id) {\r\n        return this.#sheets[id];\r\n    }\r\n\r\n    static getVarsBySheetId(id) {\r\n        if (DataControls.#sheets[id]) {\r\n            return DataControls.#sheets[id].getVars();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static getVarBySheetIdAndVarId(sheetId, varId) {\r\n        if (DataControls.#sheets[sheetId]) {\r\n            return DataControls.#sheets[sheetId].getVarById(varId);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static getDataBySheetAndVarId(sheetId, varId) {\r\n        return this.#sheets[sheetId].getDataByVarId(varId);\r\n    }\r\n}\r\n\r\n","import * as initSettings from './initial-settings.json';\r\n\r\nexport default class Settings {\r\n    static #form = document.getElementById('settings-form');\r\n    static #skipInput = Settings.#form.querySelector('#skip-options');\r\n    static #encodingInput = Settings.#form.querySelector('#encoding-options');\r\n    static #colDelimiterInput = Settings.#form.querySelector('#col-delimiter-options');\r\n    static #decimalDelimiterInput = Settings.#form.querySelector('#decimal-delimiter-options');\r\n\r\n    static #globalSettings = initSettings.default;\r\n    #skip;\r\n    #encoding;\r\n    #colDelimiter;\r\n    #decimalDelimiter;\r\n\r\n    constructor() {\r\n        this.init(Settings.#globalSettings);\r\n    }\r\n\r\n    init(settings) {\r\n        this.#skip = Object.deepCopy(settings['skip']);\r\n        this.#encoding = Object.deepCopy(settings['encoding']);\r\n        this.#colDelimiter = Object.deepCopy(settings['col-delimiter']);\r\n        this.#decimalDelimiter = Object.deepCopy(settings['decimal-delimiter']);\r\n    }\r\n\r\n    createHTML() {\r\n        Settings.#skipInput.setAttribute('value', `${this.#skip.value}`);\r\n        Settings.#skipInput.value = this.#skip.value;\r\n\r\n        createOptions(this.#encoding, Settings.#encodingInput);\r\n        createOptions(this.#colDelimiter, Settings.#colDelimiterInput);\r\n        createOptions(this.#decimalDelimiter, Settings.#decimalDelimiterInput);\r\n\r\n        function createOptions(settingName, settingElement) {\r\n            settingElement.innerHTML = '';\r\n            for (let option of Object.entries(settingName.select)) {\r\n                settingElement.innerHTML += `<option value=\"${option[0]}\" ${settingName.selected === option[0] ? 'selected' : ''}>${option[1]}</option>`;\r\n            }\r\n        }\r\n    }\r\n\r\n    getSettings() {\r\n        return {\r\n            skip: this.#skip,\r\n            encoding: this.#encoding,\r\n            colDelimiter: this.#colDelimiter,\r\n            decimalDelimiter: this.#decimalDelimiter,\r\n        };\r\n    }\r\n\r\n    setSettings(formData) {\r\n        this.#skip.value = formData.get('skip');\r\n        this.#encoding.selected = formData.get('encoding');\r\n        this.#colDelimiter.selected = formData.get('col-delimiter');\r\n        this.#decimalDelimiter.selected = formData.get('decimal-delimiter');\r\n    }\r\n\r\n    static setGlobalSettings(formData) {\r\n        Settings.#globalSettings['skip'].value = formData.get('skip');\r\n        Settings.#globalSettings['encoding'].selected = formData.get('encoding');\r\n        Settings.#globalSettings['col-delimiter'].selected = formData.get('col-delimiter');\r\n        Settings.#globalSettings['decimal-delimiter'].selected = formData.get('decimal-delimiter');\r\n    }\r\n}","import * as Papa from 'papaparse';\r\nimport Settings from './Settings';\r\n// import UIControls from '@/UIControls';\r\nimport ModuleIntegrator from '@/ModuleIntegrator';\r\nimport Var from './Var';\r\n\r\nexport default class Sheet {\r\n    #name;\r\n    #id;\r\n    #data;\r\n    #dataVars = [];\r\n    #settings = {\r\n        obj: {},\r\n        props: {}\r\n    };\r\n    #tableElement;\r\n    #footerElement;\r\n    #file;\r\n    #needToApplySettings = false;\r\n    #openedVar;\r\n\r\n\r\n    constructor(name, file, id) {\r\n        this.#id = id;\r\n        this.#name = name;\r\n        this.#settings.obj = new Settings();\r\n        this.#settings.props = this.#settings.obj.getSettings();;\r\n        this.#createTableElement();\r\n        this.#createFooterElement();\r\n        this.importFile(file);\r\n    }\r\n\r\n    importFile(file) {\r\n        this.#file = file;\r\n        this.#parseDataInFile(true);\r\n    }\r\n\r\n    setSettings(settingsFormData) {\r\n        this.#needToApplySettings = true;\r\n        this.#settings.obj.setSettings(settingsFormData);\r\n        this.#settings.props = this.#settings.obj.getSettings();\r\n    }\r\n\r\n    applySettingsAndShow() {\r\n        this.#needToApplySettings = false;\r\n        this.#parseDataInFile(false);\r\n    }\r\n\r\n    createVarSettings(varID) {\r\n        const changedVar = this.#dataVars[Number(varID.split('_')[2])]\r\n        changedVar.createHTML();\r\n        this.#openedVar = changedVar;\r\n    }\r\n\r\n    setVarSettings(formData, order, twoTables) {\r\n        this.#openedVar.setSettings(formData, order, twoTables);\r\n        ModuleIntegrator.updateVarsOfSheet(this.#id, false);\r\n    }\r\n\r\n    readyToShow() {\r\n        return !this.#needToApplySettings;\r\n    }\r\n\r\n    show() {\r\n        this.#settings.obj.createHTML();\r\n        this.#tableElement.classList.add('data__table_shown');\r\n        this.#footerElement.classList.add('footer__item_selected');\r\n        UIControls.footerChange();\r\n    }\r\n\r\n    hide() {\r\n        this.#tableElement.classList.remove('data__table_shown');\r\n        this.#footerElement.classList.remove('footer__item_selected');\r\n    }\r\n\r\n    setId(id) {\r\n        this.#id = id;\r\n        this.#footerElement.setAttribute('id', id);\r\n    }\r\n\r\n    #createTableElement() {\r\n        this.#tableElement = UIControls.dataContainer.insertBefore(document.createElement('table'), UIControls.dataContainer.firstChild);\r\n        this.#tableElement.classList.add('data__table');\r\n        this.#tableElement.setAttribute('id', this.#id);\r\n        this.#tableElement.innerHTML = `\r\n        <thead>\r\n            <tr>\r\n                <th title=\"Настройки импортированных данных\" id=\"dataSettingsBtn\" class=\"dataSettingsBtn_new\">\r\n                    <?xml version=\"1.0\"?><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"\r\n                        width=\"19px\" height=\"19px\">\r\n                        <path\r\n                            d=\"M47.16,21.221l-5.91-0.966c-0.346-1.186-0.819-2.326-1.411-3.405l3.45-4.917c0.279-0.397,0.231-0.938-0.112-1.282 l-3.889-3.887c-0.347-0.346-0.893-0.391-1.291-0.104l-4.843,3.481c-1.089-0.602-2.239-1.08-3.432-1.427l-1.031-5.886 C28.607,2.35,28.192,2,27.706,2h-5.5c-0.49,0-0.908,0.355-0.987,0.839l-0.956,5.854c-1.2,0.345-2.352,0.818-3.437,1.412l-4.83-3.45 c-0.399-0.285-0.942-0.239-1.289,0.106L6.82,10.648c-0.343,0.343-0.391,0.883-0.112,1.28l3.399,4.863 c-0.605,1.095-1.087,2.254-1.438,3.46l-5.831,0.971c-0.482,0.08-0.836,0.498-0.836,0.986v5.5c0,0.485,0.348,0.9,0.825,0.985 l5.831,1.034c0.349,1.203,0.831,2.362,1.438,3.46l-3.441,4.813c-0.284,0.397-0.239,0.942,0.106,1.289l3.888,3.891 c0.343,0.343,0.884,0.391,1.281,0.112l4.87-3.411c1.093,0.601,2.248,1.078,3.445,1.424l0.976,5.861C21.3,47.647,21.717,48,22.206,48 h5.5c0.485,0,0.9-0.348,0.984-0.825l1.045-5.89c1.199-0.353,2.348-0.833,3.43-1.435l4.905,3.441 c0.398,0.281,0.938,0.232,1.282-0.111l3.888-3.891c0.346-0.347,0.391-0.894,0.104-1.292l-3.498-4.857 c0.593-1.08,1.064-2.222,1.407-3.408l5.918-1.039c0.479-0.084,0.827-0.5,0.827-0.985v-5.5C47.999,21.718,47.644,21.3,47.16,21.221z M25,32c-3.866,0-7-3.134-7-7c0-3.866,3.134-7,7-7s7,3.134,7,7C32,28.866,28.866,32,25,32z\" />\r\n                    </svg>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n        </tbody>`;\r\n    }\r\n\r\n    #createFooterElement() {\r\n        this.#footerElement = UIControls.footerList.appendChild(document.createElement('li'));\r\n        this.#footerElement.classList.add('footer__item', 'footer__item_selected', 'footer__item_new');\r\n        this.#footerElement.setAttribute('id', this.#id);\r\n        this.#footerElement.innerHTML = `\r\n        <div class=\"footer__item-content\">\r\n            <span class=\"footer__item-text\">\r\n                ${this.#name}\r\n            </span>\r\n        </div>`;\r\n    }\r\n\r\n    #createHTML() {\r\n        const createThead = () => {\r\n            const createTh = (name, index) => {\r\n                return `<th>\r\n                    <div class=\"data__column-header\">\r\n                        <div title=\"Сменить тип данных колонки\" id=${this.#dataVars[index].getID()} class=\"data__var-icon data__var-icon_new\">\r\n                            <img src=\"${this.#dataVars[index].getImg()}\" alt=\"${this.#dataVars[index].getName()}\">\r\n                        </div>\r\n                        <span class=\"data__var-name\">${name}</span>\r\n                    </div>\r\n                </th>`;\r\n            };\r\n\r\n            const headersArray = this.#data[0].map((el, index) => createTh(el, index));\r\n            return headersArray.reduce((ths, element) => ths + element);\r\n\r\n        };\r\n\r\n        const createTbody = () => {\r\n            let curRow = 1;\r\n\r\n            const createTr = (vals) => {\r\n                return `\r\n                <tr>\r\n                    <td>${curRow++}</td>\r\n                    ${vals.reduce((tds, element) => tds + element)}\r\n                </tr>`;\r\n            };\r\n\r\n            return this.#data.slice(1).map(row =>\r\n                createTr(row.map(val =>\r\n                    `<td class='${typeof val == 'number' ? 'number' : ''}'>${val}</td>`\r\n                ))).join('');\r\n\r\n        };\r\n\r\n        const createInnerHtml = (createHeader, createBody) => {\r\n            const head = this.#tableElement.querySelector('tr');\r\n            const btn = head.querySelector('#dataSettingsBtn');\r\n            const body = this.#tableElement.querySelector('tbody');\r\n\r\n            head.innerHTML = createHeader ? createThead() : '';\r\n            head.insertBefore(btn, head.firstElementChild);\r\n\r\n            body.innerHTML = createBody ? createTbody() : '';\r\n        };\r\n\r\n\r\n        switch (this.#data.length) {\r\n            case 0: {\r\n                createInnerHtml(false, false);\r\n                break;\r\n            }\r\n            case 1: {\r\n                createInnerHtml(true, false);\r\n                break\r\n            }\r\n            default: {\r\n                createInnerHtml(true, true);\r\n            }\r\n        }\r\n\r\n        UIControls.initNewSheetControls();\r\n        this.show();\r\n    }\r\n\r\n    #parseDataInFile(isNewFile) {\r\n        const del = this.#settings.props.decimalDelimiter.selected;\r\n        let regExpReadyDel = del;\r\n        if (RegExp.specialSymbols.includes(del)) {\r\n            regExpReadyDel = '\\\\' + del;\r\n        }\r\n        const regex = new RegExp(`^-?(?:\\\\d+(?:${regExpReadyDel}\\\\d+)?|\\\\d+(?:${regExpReadyDel}\\\\d+)?(?:e|E)(?:\\\\+|-)?\\\\d+)$`);\r\n\r\n        Papa.parse(this.#file, {\r\n            encoding: this.#settings.props.encoding.selected,\r\n            delimiter: this.#settings.props.colDelimiter.selected,\r\n            transform: (val, col) => {\r\n                let valTrimmed = val.trim();\r\n\r\n                if (regex.test(valTrimmed)) {\r\n                    return Number(valTrimmed.replace(del, '.'));\r\n                }\r\n                else {\r\n                    return valTrimmed;\r\n                }\r\n            },\r\n            skipEmptyLines: true,\r\n            complete: (results) => {\r\n                const skip = this.#settings.props.skip.value;\r\n                if (skip != 0) {\r\n                    results.data = results.data.slice(skip);\r\n                }\r\n                this.#data = results.data;\r\n                this.#initVars();\r\n                this.#createHTML();\r\n                if (isNewFile) {\r\n                    ModuleIntegrator.optionListAdd({\r\n                        name: this.#name,\r\n                        id: this.#id\r\n                    });\r\n                }\r\n                if (this.#id === 0 || !isNewFile) {\r\n                    ModuleIntegrator.updateVarsOfSheet(this.#id, true);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    #initVars() {\r\n        if (this.#data.length === 0)\r\n            return;\r\n\r\n        let i = 0;\r\n        const idName = () => 'var' + '_' + this.#id + '_' + (i++);\r\n        const dataVars = this.#data[0].map((_, colIndex) => getColumnVar(this.#data.map(row => row[colIndex])));\r\n        this.#dataVars = dataVars;\r\n\r\n        function getColumnVar(column) {\r\n            const columnData = column.slice(1);\r\n            const uniqueValues = new Set(columnData);\r\n            const notANumber = columnData.find(val => typeof val !== 'number');\r\n\r\n            const newVar = (type) => new Var(type, idName(), uniqueValues, column[0], (notANumber == undefined));\r\n\r\n            if (columnData.length === 0) {\r\n                return newVar(Var.Nominal);\r\n            }\r\n\r\n            if (uniqueValues.size === 2) {\r\n                return newVar(Var.Binary);\r\n            }\r\n\r\n            if (notANumber) {\r\n                return newVar(Var.Nominal);\r\n            }\r\n            return newVar(Var.Continues);\r\n        }\r\n    }\r\n\r\n    getName() {\r\n        return this.#name;\r\n    }\r\n\r\n    getID() {\r\n        return this.#id;\r\n    }\r\n\r\n    getVars() {\r\n        return this.#dataVars;\r\n    }\r\n\r\n    getVarById(varId) {\r\n        return this.#dataVars[varId];\r\n    }\r\n\r\n    getDataByVarId(varId) {\r\n        return this.#data.map((arr) => arr[varId]);\r\n    }\r\n}","import nominalImg from '@img/table/scaleNominal.png';\r\nimport continuesImg from '@img/table/scaleContinues.png';\r\nimport binaryImg from '@img/table/scaleBinary.png';\r\nimport rangImg from '@img/table/scaleRang.png';\r\n// import UIControls from '../UIControls';\r\n\r\nexport default class Var {\r\n    static Binary = {\r\n        name: 'binary',\r\n        ruName: 'дихотомический',\r\n        img: binaryImg,\r\n    };\r\n    static Nominal = {\r\n        name: 'nominal',\r\n        ruName: 'номинативный',\r\n        img: nominalImg,\r\n    };\r\n    static Continues = {\r\n        name: 'continues',\r\n        ruName: 'количественный',\r\n        img: continuesImg,\r\n    };\r\n    static Rang = {\r\n        name: 'rang',\r\n        ruName: 'ранговый',\r\n        img: rangImg,\r\n    };\r\n\r\n    #typeName;\r\n    #ruTypeName;\r\n    #name;\r\n    #id;\r\n    #img;\r\n    #set = [];\r\n    #order = [];\r\n    #binaryGroups;\r\n    #onlyNumbers;\r\n\r\n    constructor(type, id, set, name, onlyNumbers) {\r\n        this.#typeName = type.name;\r\n        this.#img = type.img;\r\n        this.#ruTypeName = type.ruName;\r\n        this.#id = id;\r\n        this.#name = name;\r\n        this.#onlyNumbers = onlyNumbers;\r\n        let sortFunction = this.#typeName !== 'continues' ?\r\n            undefined : function (a, b) {\r\n                return a - b;\r\n            };\r\n        this.#set = [...set].sort(sortFunction);\r\n        this.#order = new Array(set.size);\r\n        for (let i = 0; i < set.size; i++) {\r\n            this.#order[i] = i;\r\n        }\r\n        this.#binaryGroups = new Array(Math.ceil(set.size / 32)).fill(0);\r\n        if (this.#typeName === 'binary')\r\n            this.#binaryGroups[0] = (0x1 << 30);\r\n    }\r\n\r\n    setSettings(formData, order, twoTables) {\r\n        const varHeader = document.getElementById(this.#id);\r\n\r\n        this.#name = formData.get('var-name');\r\n        varHeader.nextElementSibling.textContent = this.#name;\r\n\r\n        this.#typeName = formData.get('var-type');\r\n        this.#img = Object.entries(Var).find(item => item[1]['name'] === this.#typeName)[1]['img'];\r\n        varHeader.querySelector('img').setAttribute('src', this.#img);\r\n\r\n        this.#order = order;\r\n\r\n        if (!twoTables.group1[0]) {\r\n            this.#binaryGroups.fill(0);\r\n            return;\r\n        }\r\n\r\n        let curItem = 0;\r\n        let curBit = twoTables.group1[curItem];\r\n        let nextBit = twoTables.group1[curItem];\r\n        let shift = curBit;\r\n        let number;\r\n        for (let i = 0; i < this.#binaryGroups.length; i++) {\r\n            number = 0x0;\r\n\r\n            while (nextBit < 32 * (i + 1)) {\r\n                number <<= shift;\r\n                number |= 0x1;\r\n                curBit = twoTables.group1[curItem];\r\n                nextBit = twoTables.group1[++curItem]\r\n                shift = nextBit - curBit;\r\n            }\r\n\r\n            number <<= (31 - (curBit % 32));\r\n            this.#binaryGroups[this.#binaryGroups.length - i - 1] = number;\r\n        }\r\n    }\r\n    createHTML() {\r\n        const modal = UIControls.modalVarType;\r\n        const name = UIControls.modalVarType.querySelector('#modal-var-types__name');\r\n        const continuesLabel = UIControls.modalVarType.querySelector('.modal-var-types__continues-container');\r\n        const varChooseInputs = [...UIControls.modalVarType.querySelectorAll('.modal-var-types__item-input')];\r\n        const rangBody = modal.querySelector('.modal-var-types__rang-table-body');\r\n        const binBodies = [...modal.querySelectorAll('.modal-var-types__binary-table-body')];\r\n\r\n        name.value = this.#name;\r\n        name.setAttribute('value', this.#name);\r\n\r\n        varChooseInputs.forEach(element => {\r\n            element.checked = element.value === this.#typeName;\r\n        });\r\n        if (!this.#onlyNumbers) {\r\n            continuesLabel.classList.add('radio-line_disabled');\r\n            continuesLabel.firstElementChild.disabled = true;\r\n        }\r\n        else {\r\n            continuesLabel.classList.remove('radio-line_disabled');\r\n            continuesLabel.firstElementChild.disabled = false;\r\n        }\r\n\r\n        let str = '';\r\n        for (let i = 0; i < this.#set.length; i++) {\r\n            str += `\r\n            <label class=\"var-table__item\" data-order=\"${this.#order[i]}\">\r\n                <input type=\"radio\" name=\"data_value\">\r\n                <span>${this.#set[this.#order[i]]}</span>\r\n            </label>`;\r\n        }\r\n        rangBody.innerHTML = str;\r\n\r\n        let str1 = '';\r\n        let str2 = '';\r\n        let counter = 0;\r\n        let fin = this.#set.length - 1;\r\n        const getLabel = (counter, value) => {\r\n            return `<label class=\"var-table__item\" data-anchor=${counter}>\r\n                        <input type=\"radio\" name=\"data_value\">\r\n                        <span>${value}</span>\r\n                    </label>`};\r\n        const getAnchor = (counter) => `<div class='var-table__anchor var-table__anchor_${counter}'></div>`;\r\n        for (let q = this.#binaryGroups.length - 1; q >= 0; q--) {\r\n            let shift = 31;\r\n            let binNumber = (0x1 << shift);\r\n\r\n            for (let i = 0; i < 32; i++) {\r\n                if ((this.#binaryGroups[q] & binNumber) === 0x0) {\r\n                    str1 += getLabel(counter, this.#set[counter]);\r\n                } else {\r\n                    str2 += getLabel(counter, this.#set[counter]);\r\n                }\r\n\r\n                str1 += getAnchor(counter);\r\n                str2 += getAnchor(counter);\r\n\r\n                counter++;\r\n                binNumber = binNumber >>> 1;\r\n                if (counter > fin)\r\n                    break;\r\n            }\r\n        }\r\n\r\n        binBodies[0].innerHTML = str1;\r\n        binBodies[1].innerHTML = str2;\r\n\r\n    }\r\n\r\n    //returns 0 if zero group, 1 if in first, -1 if val is not in the set \r\n    isValInZeroGroup(val) {\r\n        const indexInSet = this.#set.indexOf(val);\r\n        if (indexInSet === -1)\r\n            return -1;\r\n        const grLength = this.#binaryGroups.length;\r\n\r\n        const groupIndex = grLength - Math.floor(indexInSet / 32) - 1;\r\n        if (groupIndex < 0) {\r\n            return -1;\r\n        }\r\n        const bitIndex = indexInSet % 32;\r\n        const bit = this.#binaryGroups[groupIndex] >>> (31 - bitIndex);\r\n\r\n        if (bit & 0x1 === 1) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    getOrderOfVal(val) {\r\n        const indexInSet = this.#set.indexOf(val);\r\n        if (indexInSet === -1)\r\n            return -1;\r\n        const order = this.#order.indexOf(indexInSet);\r\n\r\n        return order !== undefined ? order : -1;\r\n    }\r\n\r\n    getID() {\r\n        return this.#id;\r\n    }\r\n\r\n    getName() {\r\n        return this.#name;\r\n    }\r\n\r\n    getImg() {\r\n        return this.#img;\r\n    }\r\n\r\n    getTypeName() {\r\n        return this.#typeName;\r\n    }\r\n\r\n    getRuTypeName() {\r\n        return this.#ruTypeName;\r\n    }\r\n}","export default class AbstractModule {\r\n\r\n    static comElements = {\r\n        parametersContainer: document.querySelector('.parameters__container'),\r\n        resultsContainer: document.querySelector('.results__container'),\r\n    }\r\n\r\n    constructor() {\r\n        if (AbstractModule === new.target)\r\n            throw new Error(\"Can't create an instance of an abstract class\");\r\n    }\r\n\r\n    static setModuleTypeId(id) {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    static getModuleTypeId() {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    static getName() {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    static getImage() {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    deleteSelf() {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    getAllData() {\r\n        throw new Error('This method must be implemented');\r\n\r\n    }\r\n\r\n    setName(name) {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    setId(id) {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    getName() {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    getElement() {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    getFormSheets() {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    getSheetSelects() {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    addListeners(element) {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    displayVarsOfSheet(sheetId, type) {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    updateSelectedVarsVisual(sheetId) {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    clearSelectedVars() {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    createHTML() {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    setSettings() {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    getN(alpha, power) {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    setStatPower(alpha, sampleSize) {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    updateResultsHtml(isMain) {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    changeVisibilityResultsHtml(hide) {\r\n        throw new Error('This method must be implemented');\r\n    }\r\n\r\n    //ABSTRACT ONLY\r\n\r\n    static addSheetOptions(listOfSheets, selects) {\r\n        let str = '';\r\n        for (let el of listOfSheets) {\r\n            if (!selects[0].querySelector(`.select-option-${el.id}`)) {\r\n                const option = `<option class='select-option-${el.id}' value=\"${el.id}\">${el.name}</option>`\r\n                str += option;\r\n            }\r\n        }\r\n\r\n        for (let select of selects) {\r\n            select.innerHTML += str;\r\n        }\r\n    }\r\n\r\n    getZAlpha(altHypTest, alpha) {\r\n        return altHypTest === 'both' ? Math.norminv(alpha / 2) : Math.norminv(alpha)\r\n    }\r\n\r\n    getZ(zAlpha, power) {\r\n        return zAlpha + Math.norminv(100 - power);\r\n    }\r\n}\r\n\r\n","var map = {\n\t\"./correlation-test/Module.js\": [\n\t\t\"./modules/correlation-test/Module.js\",\n\t\t\"modules_correlation-test_Module_js\"\n\t],\n\t\"./independent-sample-test/Module.js\": [\n\t\t\"./modules/independent-sample-test/Module.js\",\n\t\t\"modules_independent-sample-test_Module_js\"\n\t],\n\t\"./paired-sample-test/Module.js\": [\n\t\t\"./modules/paired-sample-test/Module.js\",\n\t\t\"modules_paired-sample-test_Module_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./modules lazy recursive ^\\\\.\\\\/.*\\\\/Module\\\\.js$\";\nmodule.exports = webpackAsyncContext;","Object.deepCopy = function (from) {\r\n    return JSON.parse(JSON.stringify(from));\r\n}\r\n\r\nRegExp.specialSymbols = ['[', ']', '\\\\', '^', '$', '.', '|', '?', '*', '+', '(', ')'];\r\n\r\nwindow.timeout = function timeout(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n\r\n// get p in percents\r\nMath.norminv = function (p) {\r\n    p = p / 100;\r\n    const a1 = -39.6968302866538, a2 = 220.946098424521, a3 = -275.928510446969;\r\n    const a4 = 138.357751867269, a5 = -30.6647980661472, a6 = 2.50662827745924;\r\n    const b1 = -54.4760987982241, b2 = 161.585836858041, b3 = -155.698979859887;\r\n    const b4 = 66.8013118877197, b5 = -13.2806815528857, c1 = -7.78489400243029E-03;\r\n    const c2 = -0.322396458041136, c3 = -2.40075827716184, c4 = -2.54973253934373;\r\n    const c5 = 4.37466414146497, c6 = 2.93816398269878, d1 = 7.78469570904146E-03;\r\n    const d2 = 0.32246712907004, d3 = 2.445134137143, d4 = 3.75440866190742;\r\n    const p_low = 0.02425, p_high = 1 - p_low;\r\n    let q, r;\r\n    let retVal;\r\n\r\n    if ((p < 0) || (p > 1)) {\r\n        return undefined;\r\n    }\r\n    else if (p < p_low) {\r\n        q = Math.sqrt(-2 * Math.log(p));\r\n        retVal = (((((c1 * q + c2) * q + c3) * q + c4) * q + c5) * q + c6) / ((((d1 * q + d2) * q + d3) * q + d4) * q + 1);\r\n    }\r\n    else if (p <= p_high) {\r\n        q = p - 0.5;\r\n        r = q * q;\r\n        retVal = (((((a1 * r + a2) * r + a3) * r + a4) * r + a5) * r + a6) * q / (((((b1 * r + b2) * r + b3) * r + b4) * r + b5) * r + 1);\r\n    }\r\n    else {\r\n        q = Math.sqrt(-2 * Math.log(1 - p));\r\n        retVal = -(((((c1 * q + c2) * q + c3) * q + c4) * q + c5) * q + c6) / ((((d1 * q + d2) * q + d3) * q + d4) * q + 1);\r\n    }\r\n\r\n    return retVal;\r\n}\r\n\r\n// return p in percents\r\nMath.normdist = function (z) {\r\n    let sign = 1;\r\n    if (z < 0)\r\n        sign = -1;\r\n\r\n    return 0.5 * (1.0 + sign * erf(Math.abs(z) / Math.sqrt(2))) * 100;\r\n\r\n    function erf(x) {\r\n        const a1 = 0.254829592;\r\n        const a2 = -0.284496736;\r\n        const a3 = 1.421413741;\r\n        const a4 = -1.453152027;\r\n        const a5 = 1.061405429;\r\n        const p = 0.3275911;\r\n        x = Math.abs(x);\r\n        const t = 1 / (1 + p * x);\r\n        return 1 - ((((((a5 * t + a4) * t) + a3) * t + a2) * t) + a1) * t * Math.exp(-1 * x * x);\r\n    }\r\n}\r\n\r\nMath.mean = function (array) {\r\n    return array.reduce((el, c) => el + c) / array.length;\r\n}\r\n\r\nMath.stddiv = {};\r\nMath.stddiv.s = function (array) {\r\n    const n = array.length\r\n    const mean = array.reduce((a, b) => a + b) / n\r\n    return Math.sqrt(array.map(x => ((x - mean) ** 2)).reduce((a, b) => a + b) / (n - 1))\r\n}\r\n\r\nMath.fisher = function (number) {\r\n    return 0.5 * Math.log((1 + number) / (1 - number));\r\n}\r\n\r\nNumber.resultForm = function (n, noRound) {\r\n    return typeof n === 'number' && !Number.isNaN(n) ? (noRound ? n : Math.roundGOST(n, 2)) : '-';\r\n}\r\n\r\nString.resultForm = function (s) {\r\n    return s !== undefined && s !== null ? s : '-';\r\n}\r\n\r\n// Math.roundFixed = function (num, dec) {\r\n//     const mult = 10 ** dec;\r\n//     return Math.round((num + Number.EPSILON) * mult) / mult;\r\n// }\r\n\r\nMath.roundGOST = function (num) {\r\n    let tempN = Math.abs(num);\r\n    let tempAnswer;\r\n    if (tempN >= 10) {\r\n        tempAnswer = num;\r\n        if (String(tempN).split('.')[1]?.charAt(1) === '5') {\r\n            tempAnswer += 0.01 * Math.sign(num);\r\n        }\r\n        return tempAnswer.toFixed(1);\r\n    }\r\n    else if (tempN >= 1) {\r\n        tempAnswer = num;\r\n        if (String(tempN).charAt(4) === '5') {\r\n            tempAnswer += 0.001 * Math.sign(num);\r\n        }\r\n        return tempAnswer.toPrecision(3);\r\n    }\r\n    else {\r\n        if (tempN === 0.995) {\r\n            return Math.round(num).toFixed(2);\r\n        }\r\n        tempAnswer = num.toPrecision(2);\r\n        if (tempAnswer == 1) {\r\n            return '1.00';\r\n        }\r\n        else if (tempAnswer == -1) {\r\n            return '-1.00';\r\n        }\r\n        else {\r\n            return tempAnswer;\r\n        }\r\n    }\r\n}\r\n\r\n//Возможно нужно ранжировать значения обоих выборок как одной\r\nMath.rank = {};\r\nMath.rank.avg = function (array, getRankFunc) {\r\n    const obj = {\r\n        get(i) {\r\n            if (this[i])\r\n                return this[i].avg;\r\n        }\r\n    };\r\n    for (let el of array) {\r\n        if (obj[el]) {\r\n            obj[el].count++;\r\n        }\r\n        else {\r\n            obj[el] = {\r\n                avg: el.getRankFunc(),\r\n                count: 1\r\n            }\r\n        }\r\n    }\r\n    let curRank = 0;\r\n    let nextRank = 1;\r\n    let curKey = getKeyByValue(obj, curRank);\r\n    let nextKey = getKeyByValue(obj, nextRank);\r\n    while (curKey !== undefined) {\r\n        obj[key].avg = obj[key].avg + obj[key].count * 0.5 - 0.5;\r\n        obj[nextKey].avg += obj[key].count - 1;\r\n        curRank = nextRank;\r\n        nextRank = nextRank + 1;\r\n        curKey = nextKey;\r\n        nextKey = getKeyByValue(obj, nextRank);\r\n    }\r\n\r\n    return obj;\r\n\r\n    function getKeyByValue(object, value) {\r\n        return Object.keys(object).find(key => object[key] === value);\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\n// data-webpack is not used as build has no uniqueName\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_papaparse_papaparse_min_js\"], () => (__webpack_require__(\"./app.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}